diff --git a/usr/share/rear/output/ISO/Linux-ppc64/80_create_isofs.sh b/usr/share/rear/output/ISO/Linux-ppc64/80_create_isofs.sh
deleted file mode 100644
index bb67c5f..0000000
--- a/usr/share/rear/output/ISO/Linux-ppc64/80_create_isofs.sh
+++ /dev/null
@@ -1,48 +0,0 @@
-# #80_create_isofs.sh
-#
-# create initramfs for Relax-and-Recover
-#
-#    Relax-and-Recover is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-
-#    Relax-and-Recover is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-
-#    You should have received a copy of the GNU General Public License
-#    along with Relax-and-Recover; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
-#
-
-# check that we have mkisofs
-[ -x "$ISO_MKISOFS_BIN" ]
-StopIfError "ISO_MKISOFS_BIN [$ISO_MKISOFS_BIN] not an executable !"
-
-Log "Copying kernel"
-cp -pL $v $KERNEL_FILE $TMP_DIR/kernel >&2
-
-if [[ "$SUSE_STYLE" ]]; then
-  ISO_FILES=( ${ISO_FILES[@]} $TMP_DIR/kernel initrd.cgz yaboot)
-else
-  ISO_FILES=( ${ISO_FILES[@]} $TMP_DIR/kernel initrd.cgz)
-fi
-Log "Starting '$ISO_MKISOFS_BIN'"
-LogPrint "Making ISO image"
-
-mkdir -p $v "$ISO_DIR" >&2
-StopIfError "Could not create ISO ouput directory ($ISO_DIR)"
-
-pushd $TMP_DIR >&8 # so that relative paths will work
-$ISO_MKISOFS_BIN $v -o "$ISO_DIR/$ISO_PREFIX.iso" -U -chrp-boot \
-	-R -J -volid "$ISO_VOLID" -v -graft-points "${ISO_FILES[@]}" >&8
-StopIfError "Could not create ISO image"
-ISO_IMAGES=( "${ISO_IMAGES[@]}" "$ISO_DIR/$ISO_PREFIX.iso" )
-popd >&8
-Print "Wrote ISO Image $ISO_DIR/$ISO_PREFIX.iso ($(du -h "$ISO_DIR/$ISO_PREFIX.iso"| tr -s " \t" " " | cut -d " " -f 1))"
-
-# Add ISO image to result files
-RESULT_FILES=( "${RESULT_FILES[@]}" "$ISO_DIR/$ISO_PREFIX.iso" )
diff --git a/usr/share/rear/output/ISO/Linux-ppc64/80_create_isofs.sh b/usr/share/rear/output/ISO/Linux-ppc64/80_create_isofs.sh
new file mode 120000
index 0000000..36ac959
--- /dev/null
+++ b/usr/share/rear/output/ISO/Linux-ppc64/80_create_isofs.sh
@@ -0,0 +1 @@
+../Linux-ppc64le/80_create_isofs.sh
\ No newline at end of file
diff --git a/usr/share/rear/output/ISO/Linux-ppc64/81_prepare_multiple_iso.sh b/usr/share/rear/output/ISO/Linux-ppc64/81_prepare_multiple_iso.sh
new file mode 120000
index 0000000..c0dc5a5
--- /dev/null
+++ b/usr/share/rear/output/ISO/Linux-ppc64/81_prepare_multiple_iso.sh
@@ -0,0 +1 @@
+../Linux-i386/81_prepare_multiple_iso.sh
\ No newline at end of file
diff --git a/usr/share/rear/output/ISO/Linux-ppc64/82_create_iso_image.sh b/usr/share/rear/output/ISO/Linux-ppc64/82_create_iso_image.sh
new file mode 120000
index 0000000..52f8583
--- /dev/null
+++ b/usr/share/rear/output/ISO/Linux-ppc64/82_create_iso_image.sh
@@ -0,0 +1 @@
+../Linux-ppc64le/82_create_iso_image.sh
\ No newline at end of file
diff --git a/usr/share/rear/output/ISO/Linux-ppc64le/80_create_isofs.sh b/usr/share/rear/output/ISO/Linux-ppc64le/80_create_isofs.sh
index 4c4fcd8..20a57a9 100644
--- a/usr/share/rear/output/ISO/Linux-ppc64le/80_create_isofs.sh
+++ b/usr/share/rear/output/ISO/Linux-ppc64le/80_create_isofs.sh
@@ -31,14 +31,3 @@ LogPrint "Making ISO image"
 
 mkdir -p $v "$ISO_DIR" >&2
 StopIfError "Could not create ISO ouput directory ($ISO_DIR)"
-
-pushd $TMP_DIR >&8 # so that relative paths will work
-$ISO_MKISOFS_BIN $v -o "$ISO_DIR/$ISO_PREFIX.iso" -U -chrp-boot \
-	-R -J -volid "$ISO_VOLID" -v -graft-points "${ISO_FILES[@]}" >&8
-StopIfError "Could not create ISO image"
-ISO_IMAGES=( "${ISO_IMAGES[@]}" "$ISO_DIR/$ISO_PREFIX.iso" )
-popd >&8
-Print "Wrote ISO Image $ISO_DIR/$ISO_PREFIX.iso ($(du -h "$ISO_DIR/$ISO_PREFIX.iso"| tr -s " \t" " " | cut -d " " -f 1))"
-
-# Add ISO image to result files
-RESULT_FILES=( "${RESULT_FILES[@]}" "$ISO_DIR/$ISO_PREFIX.iso" )
diff --git a/usr/share/rear/output/ISO/Linux-ppc64le/81_prepare_multiple_iso.sh b/usr/share/rear/output/ISO/Linux-ppc64le/81_prepare_multiple_iso.sh
new file mode 120000
index 0000000..c0dc5a5
--- /dev/null
+++ b/usr/share/rear/output/ISO/Linux-ppc64le/81_prepare_multiple_iso.sh
@@ -0,0 +1 @@
+../Linux-i386/81_prepare_multiple_iso.sh
\ No newline at end of file
diff --git a/usr/share/rear/output/ISO/Linux-ppc64le/82_create_iso_image.sh b/usr/share/rear/output/ISO/Linux-ppc64le/82_create_iso_image.sh
new file mode 100644
index 0000000..7c4c597
--- /dev/null
+++ b/usr/share/rear/output/ISO/Linux-ppc64le/82_create_iso_image.sh
@@ -0,0 +1,22 @@
+
+Log "Starting '$ISO_MKISOFS_BIN'"
+LogPrint "Making ISO image"
+
+pushd $TMP_DIR >&2
+
+# If isofs directory exists, add its content to ISO_FILES (when backup must be part of the ISO images)
+if [ -d isofs ] ; then
+    ISO_FILES=( ${ISO_FILES[@]} isofs )
+fi
+
+# mkisofs command for ppc64/ppc64le arch
+$ISO_MKISOFS_BIN $v -o "$ISO_DIR/$ISO_PREFIX.iso" -U -chrp-boot -R -J -volid "$ISO_VOLID" -v -graft-points "${ISO_FILES[@]}" >&2
+
+StopIfError "Could not create ISO image (with $ISO_MKISOFS_BIN)"
+popd >&2
+
+iso_image_size=( $(du -h "$ISO_DIR/$ISO_PREFIX.iso") )
+LogPrint "Wrote ISO image: $ISO_DIR/$ISO_PREFIX.iso ($iso_image_size)"
+
+# Add ISO image to result files
+RESULT_FILES=( "${RESULT_FILES[@]}" "$ISO_DIR/$ISO_PREFIX.iso" )
